import requests
import pytest

HOST = "http://localhost"

tokens = {}

# Fixture to authenticate users
@pytest.fixture(autouse=True)
def authenticate_users():
    tokens['user'] = authenticate_user("mike", "test")
    tokens['admin'] = authenticate_user("admin", "letmein")

# Function to authenticate a user and return a bearer token
def authenticate_user(username, password):
    data = {"username": username, "password": password}
    response = requests.post(HOST + "/api/v2/login", data=data)
    bearer = response.json()["token"]
    return bearer

# Test for system information endpoint, which should be admin only.
def test_sysinfo():
    user_response = requests.get(
        HOST + "/api/v2/sysinfo/uname",
        headers={"Authorization": "Bearer " + tokens['user']}
    )
    admin_response = requests.get(
        HOST + "/api/v2/sysinfo/uname",
        headers={"Authorization": "Bearer " + tokens['admin']}
    )

    # Assert that the admin can accesss the page, but the user cannot.
    assert admin_response.status_code == 200 and user_response.status_code == 403